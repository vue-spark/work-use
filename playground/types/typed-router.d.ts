/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection ES6UnusedImports
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-resolver' {
  export type ParamParserCustom = never
}

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/element-plus/pagination-adapter': RouteRecordInfo<
      '/element-plus/pagination-adapter',
      '/element-plus/pagination-adapter',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/element-plus/table-schema-columns': RouteRecordInfo<
      '/element-plus/table-schema-columns',
      '/element-plus/table-schema-columns',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/shared/section-layout': RouteRecordInfo<
      '/shared/section-layout',
      '/shared/section-layout',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/shared/toolbar': RouteRecordInfo<
      '/shared/toolbar',
      '/shared/toolbar',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/shared/use-pagination': RouteRecordInfo<
      '/shared/use-pagination',
      '/shared/use-pagination',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/shared/use-selection': RouteRecordInfo<
      '/shared/use-selection',
      '/shared/use-selection',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'playground/src/pages/element-plus/pagination-adapter.vue': {
      routes:
        | '/element-plus/pagination-adapter'
      views:
        | never
    }
    'playground/src/pages/element-plus/table-schema-columns.vue': {
      routes:
        | '/element-plus/table-schema-columns'
      views:
        | never
    }
    'playground/src/pages/shared/section-layout.vue': {
      routes:
        | '/shared/section-layout'
      views:
        | never
    }
    'playground/src/pages/shared/toolbar.vue': {
      routes:
        | '/shared/toolbar'
      views:
        | never
    }
    'playground/src/pages/shared/use-pagination.vue': {
      routes:
        | '/shared/use-pagination'
      views:
        | never
    }
    'playground/src/pages/shared/use-selection.vue': {
      routes:
        | '/shared/use-selection'
      views:
        | never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
